#
# Copyright (C) 2022 Vaticle
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#

version: 2.1
orbs:
  win: circleci/windows@2.0.0

executors:
  linux-arm64:
    machine:
      image: ubuntu-2004:current
      resource_class: arm.medium
    working_directory: ~/typedb-studio

  linux-x86_64:
    machine:
      image: ubuntu-2004:current
    working_directory: ~/typedb-studio

  mac-arm64:
    macos:
      xcode: "12.5.1"
    resource_class: macos.m1.medium.gen1
    working_directory: ~/typedb-studio

  mac-x86_64:
    macos:
      xcode: "12.5.1"
    working_directory: ~/typedb-studio


commands:

  install-bazel-linux-x86_64:
    steps:
      - run: curl -OL https://github.com/bazelbuild/bazelisk/releases/download/v1.17.0/bazelisk-linux-amd64
      - run: sudo mv bazelisk-linux-amd64 /usr/local/bin/bazel
      - run: chmod a+x /usr/local/bin/bazel

  install-bazel-linux-arm64:
    steps:
      - run: curl -OL https://github.com/bazelbuild/bazelisk/releases/download/v1.17.0/bazelisk-linux-arm64
      - run: sudo mv bazelisk-linux-arm64 /usr/local/bin/bazel
      - run: chmod a+x /usr/local/bin/bazel

  install-bazel-mac:
    steps:
      - run: brew install bazelisk

jobs:
  build-mac-arm64:
    executor: mac-arm64
    steps:
      - checkout
      - install-bazel-mac
      - run: |
          export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
          export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
          bazel run @vaticle_dependencies//distribution/artifact:create-netrc
      - run: bazel build //:assemble-platform --compilation_mode=opt --define APPLE_CODE_SIGN=yes --define APPLE_ID=$APPLE_ID --define APPLE_ID_PASSWORD=$APPLE_ID_PASSWORD --define APPLE_CODE_SIGNING_CERT_PASSWORD=$APPLE_CODE_SIGNING_CERT_PASSWORD --spawn_strategy=local
      - run: |
          mkdir -p ~/src && cp bazel-bin/assemble-platform.zip ~/src
          mkdir -p ~/dist && cd ~/dist && jar xf ~/src/assemble-platform.zip
      - persist_to_workspace:
          root: ~/dist
          paths:
            - ./*

  build-mac-x86_64:
    executor: mac-x86_64
    steps:
      - checkout
      - install-bazel-mac
      - run: |
          export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
          export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
          bazel run @vaticle_dependencies//distribution/artifact:create-netrc
      - run: bazel build //:assemble-platform --compilation_mode=opt --define APPLE_CODE_SIGN=yes --define APPLE_ID=$APPLE_ID --define APPLE_ID_PASSWORD=$APPLE_ID_PASSWORD --define APPLE_CODE_SIGNING_CERT_PASSWORD=$APPLE_CODE_SIGNING_CERT_PASSWORD --spawn_strategy=local
      - run: |
          mkdir -p ~/src && cp bazel-bin/assemble-platform.zip ~/src
          mkdir -p ~/dist && cd ~/dist && jar xf ~/src/assemble-platform.zip
      - persist_to_workspace:
          root: ~/dist
          paths:
            - ./*

  build-linux-arm64:
    executor: linux-arm64
    steps:
      - checkout
      - install-bazel-linux-arm64
      - run: bazel build //:assemble-platform --compilation_mode=opt
      - run: bazel build //:assemble-linux-targz --compilation_mode=opt
      - run: |
          mkdir -p ~/src
          mkdir -p ~/dist
          cp bazel-bin/typedb-studio-linux.tar.gz ~/dist/typedb-studio-linux-arm64-$(cat VERSION).tar.gz
          cp bazel-bin/assemble-platform.zip ~/src
          cd ~/dist
          jar xf ~/src/assemble-platform.zip
      - persist_to_workspace:
          root: ~/dist
          paths:
            - ./*

  build-linux-x86_64:
    executor: linux-x86_64
    steps:
      - checkout
      - install-bazel-linux-x86_64
      - run: bazel build //:assemble-platform --compilation_mode=opt
      - run: bazel build //:assemble-linux-targz --compilation_mode=opt
      - run: |
          mkdir -p ~/src
          mkdir -p ~/dist
          cp bazel-bin/typedb-studio-linux.tar.gz ~/dist/typedb-studio-linux-x86_64-$(cat VERSION).tar.gz
          cp bazel-bin/assemble-platform.zip ~/src
          cd ~/dist
          jar xf ~/src/assemble-platform.zip
      - persist_to_workspace:
          root: ~/dist
          paths:
            - ./*

  build-windows-x86_64:
    executor:
      name: win/default
      shell: cmd.exe
    working_directory: ~/typedb-studio
    steps:
      - checkout
      - run: .circleci\windows\prepare.bat
      - run: .circleci\windows\build.bat
      - persist_to_workspace:
          root: dist
          paths:
            - ./*

  deploy-github:
    executor: linux-x86_64
    steps:
      - attach_workspace:
          at: ~/dist
      - checkout
      - run:
          name: "Publish Draft Release on GitHub"
          command: |
            wget https://github.com/tcnksm/ghr/releases/download/v0.12.1/ghr_v0.12.1_linux_amd64.tar.gz
            tar -xf ghr_v0.12.1_linux_amd64.tar.gz
            ghr_v0.12.1_linux_amd64/ghr -t ${REPO_GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} \
              -r ${CIRCLE_PROJECT_REPONAME} -n "TypeDB Studio $(cat VERSION)" -b "$(cat ./RELEASE_NOTES_LATEST.md)" \
              -c ${CIRCLE_SHA1} -delete -draft $(cat VERSION) ~/dist/

  deploy-brew:
    executor: linux-x86_64
    steps:
      - attach_workspace:
          at: ~/dist
      - checkout
      - install-bazel-linux-x86_64
      - run: |
          export DEPLOY_BREW_TOKEN=$REPO_GITHUB_TOKEN DEPLOY_BREW_USERNAME=$REPO_GITHUB_USERNAME DEPLOY_BREW_EMAIL=$REPO_GITHUB_EMAIL
          sha256sum ~/dist/typedb-studio-mac-arm64-$(cat VERSION).dmg | awk '{print $1}' > checksum-arm64
          sha256sum ~/dist/typedb-studio-mac-x86_64-$(cat VERSION).dmg | awk '{print $1}' > checksum-x86_64
          bazel run --define version=$(cat VERSION) //:deploy-brew --//:checksum-mac-arm64=:checksum-arm64 --//:checksum-mac-x86_64=:checksum-x86_64 --compilation_mode=opt -- release

  release-cleanup:
    machine:
      image: ubuntu-2004:202101-01
    steps:
      - checkout
      - run: git push --delete https://$REPO_GITHUB_TOKEN@github.com/vaticle/typedb-studio.git $CIRCLE_BRANCH

workflows:
  release:
    jobs:
      - build-linux-arm64:
          filters:
            branches:
              only: release
      - build-linux-x86_64:
          filters:
            branches:
              only: release
      - build-mac-arm64:
          filters:
            branches:
              only: release
      - build-mac-x86_64:
          filters:
            branches:
              only: release
      - build-windows-x86_64:
          filters:
            branches:
              only: release
      - deploy-github:
          filters:
            branches:
              only: release
          requires:
            - build-linux-arm64
            - build-linux-x86_64
            - build-mac-arm64
            - build-mac-x86_64
            - build-windows-x86_64
      - deploy-approval:
          type: approval
          requires:
            - deploy-github
      - deploy-brew:
          filters:
            branches:
              only: release
          requires:
            - deploy-approval
      - release-cleanup:
          filters:
            branches:
              only: release
          requires:
            - deploy-brew
