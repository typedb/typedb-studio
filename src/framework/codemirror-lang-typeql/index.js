import { LRParser } from '@lezer/lr';
import { syntaxTree, LRLanguage, indentNodeProp, foldNodeProp, foldInside, LanguageSupport } from '@codemirror/language';
import { styleTags, tags } from '@lezer/highlight';
import { linter } from '@codemirror/lint';

// This file was generated by lezer-generator. You probably shouldn't edit it.
const parser = LRParser.deserialize({
  version: 14,
  states: "!+xOYQPOOO!ZQQO'#EPO!rQPO'#FiO!rQPO'#FkO!rQPO'#FmO!wQPO'#FoO#VQPO'#FtO#[QPO'#FwO#aQPO'#F{O#fQPO'#F}O#kQPO'#GPO#VQPO'#GRO#pQPO'#GTOOQO'#Fs'#FsOOQO'#EO'#EOOOQO'#H['#H[O$mQPO'#HSO$wQQO'#C`O%VQPO'#GpO&dQQO'#G|OOQO'#C_'#C_OOQO'#HR'#HROOQO'#C^'#C^Q&oQPOOO&tQPO'#EUOOQO'#El'#ElO'[QPO'#ElO(ZQPO'#EkO(bQQO'#EkOOQO'#ET'#ETO!ZQQO'#FcO(jQPO'#FdO(oQPO'#FfOOQO'#ES'#ESO(tQPO'#H]O(yQQO'#EROOQO,5:k,5:kO&yQPO'#EwO*PQPO'#HeO*UQPO,5<TO+YQPO,5<VO,^QPO,5<XO-bQQO'#F_O-jQSO'#FqO-rQPO'#FqO-wQSO'#FqO-|QPO'#FqO.RQPO'#HfO.WQPO,5<ZO/eQPO'#FvO/pQPO,5<`O/uQSO'#FyO0QQPO,5<cOOQO,5<g,5<gO0YQPO,5<iO0_QPO,5<kO0dQPO,5<mO0iQPO'#GVO0nQPO,5<oOOQO-E;Y-E;YO1}QPO'#CdO2XQQO'#CdO2^QQO'#DmO2^QQO'#GjOOQO'#Cc'#CcO2cQPO'#HUO2hQQO'#CbOOQO,58z,58zO2|QQO'#DTO3RQPO'#DVO3pQQO'#DcO3uQQO'#DhO3zQQO'#DjOOQO'#DS'#DSOOQO'#Gv'#GvO4PQPO'#GxO4UQPO'#GyO4ZQQO'#GzOOQO'#Gt'#GtO2^QQO'#G{OOQO'#Gs'#GsO4`QQO'#GsO4eQPO'#HlO4jQPO'#GrOOQO,5=[,5=[O4tQPO'#HQO4{QQO'#HQOOQO'#HP'#HPO5QQPO'#HmO5VQQO'#HOOOQO,5=h,5=hO5hQPO'#HnQ&oQPOOO5mQSO'#EYO5{QSO'#EXOOQO'#EW'#EWO6WQSO,5:pO(bQQO'#EzO6`QQO'#FWO6eQQO'#FZO-|QPO'#F]OOQO'#Ey'#EyO6mQPO'#ExOOQO,5;c,5;cO&|QPO,5;cO(bQQO'#EoO3RQPO'#EpO6uQQO'#EqO(bQQO'#EsO(bQQO'#EuO(bQQO'#EvOOQO'#En'#EnO7oQPO'#EmO7yQPO,5;VO8RQPO,5;VO8YQPO,5;}O!ZQQO,5<OO!ZQQO,5<QOOQO,5=w,5=wOOQO-E;Z-E;ZOOQO,5>P,5>POOQO-E;c-E;cO8_QPO'#ElO8mQPO'#EtO8pQPO'#F`O8uQPO,5;yO8}QPO,5<]O9SQSO,5<]OOQO,5>Q,5>QOOQO-E;d-E;dO9XQPO,5<bO9dQPO,5<bOOQO1G1z1G1zOOQO,5<e,5<eO#[QPO'#HhO9oQPO1G1}OOQO1G1}1G1}OOQO1G2T1G2TOOQO1G2V1G2VOOQO1G2X1G2XO9wQPO,5<qO#pQPO'#HiO:cQPO1G2ZOOQO1G2Z1G2ZO#VQPO1G2ZOOQO'#Ci'#CiO:nQPO'#CiO:sQPO'#CiO:xQPO'#CiO:}QPO'#CiO;SQPO'#CiOOQO'#HV'#HVO;XQPO'#ChO;cQPO'#DRO;mQPO,59OO;uQPO,59OO;|QPO,59OOOQO'#DP'#DPO<WQPO'#DoO<]QPO,5:XO<bQPO,5=UOOQO,5=p,5=pOOQO-E;S-E;SOOQO,59o,59oOOQO'#DX'#DXOOQO,59q,59qO<gQPO,59}OOQO,59},59}OOQO,5:S,5:SO>fQPO,5:UO>pQPO,5:UO>wQQO,5=dO>|QQO,5=eO?RQPO,5=fOOQO,5=g,5=gOOQO,5=_,5=_OOQO,5>W,5>WOOQO-E;j-E;jO?WQPO,5=lO?`QPO,5=lOOQO,5>X,5>XOOQO-E;k-E;kQYQPO,5>YOOQO-E;l-E;lOOQO,5:t,5:tO?gQSO,5:sO?rQSO,5:sO?}QWO1G0[O@fQWO,5;fOOQO,5;r,5;rOAYQPO,5;uOAqQPO,5;uOOQO,5;w,5;wOBSQPO,5;dOBeQPO,5;dOOQO1G0}1G0}OOQO,5;Z,5;ZOOQO,5;[,5;[OOQO,5;],5;]OBmQPO,5;_OOQO,5;_,5;_ODfQPO,5;aODpQPO,5;aOOQO,5;b,5;bOOQO,5;X,5;XODwQPO1G0qOEOQPO1G0qOEOQPO1G0qOEWQPO1G1iOE`QPO1G1jOEeQPO1G1lOEjQPO,5;`OEoQPO,5;zOEtQQO1G1eOFPQPO1G1eOOQO1G1e1G1eOOQO1G1w1G1wOFXQPO1G1wOOQO,5>R,5>ROF^QPO1G1|OOQO-E;e-E;eOOQO,5>S,5>SOOQO-E;f-E;fOOQO7+'i7+'iOFiQPO'#GWOFwQPO'#GWOOQO1G2]1G2]OOQO,5>T,5>TOOQO-E;g-E;gOOQO7+'u7+'uO#VQPO7+'uOF|QPO7+'uOGRQPO,59TOGWQPO,59TOGiQPO,59TO2^QQO,59TOGnQPO,59TOOQO-E;T-E;TOOQO,59m,59mOG|QPO1G.jOHbQPO1G.jOHbQPO1G.jOHjQPO1G.jOHqQPO,5:ZO#uQPO1G/sO2^QQO1G2pOHyQPO,5:POIOQQO1G/pOITQQO1G/pOIYQPO1G3OOOQO1G3P1G3POIaQQO1G3QOIfQPO1G3WOImQPO1G3WOImQPO1G3WOOQO1G3t1G3tOOQO,5=x,5=xOIuQSO1G0_OOQO-E;[-E;[OOQO'#Cy'#CyO?}QWO'#E`OOQO'#Eb'#EbOJQQPO'#EaOOQO'#E_'#E_OJkQQO'#E^OOQO7+%v7+%vOOQO'#E}'#E}O?}QWO'#E|OOQO1G1Q1G1QOOQO1G1a1G1aOOQO,5=},5=}OJxQPO1G1OOOQO-E;a-E;aO(bQQO1G0{O(bQQO1G0{OOQO,5={,5={OKZQPO7+&]OOQO-E;_-E;_OKbQPO7+&]OKjQPO'#HdOKoQPO7+'ROOQO7+'U7+'UOOQO7+'W7+'WOOQO1G0z1G0zOOQO1G1f1G1fOOQO,5=|,5=|OOQO7+'P7+'POKwQQO7+'POOQO-E;`-E;`OOQO7+'c7+'cPLSQPO'#HgOLXQPO,5<rOL^QPO<<KaOOQO<<Ka<<KaOLcQPO'#CrOLkQPO1G.oOOQO'#Cx'#CxOLpQPO'#CwOGnQPO'#CwOLuQPO1G.oOOQO,5=s,5=sOL}QPO7+$UOOQO-E;V-E;VOMUQPO7+$UOMUQPO7+$UOM^QPO'#DqOMcQPO'#DpOMkQPO1G/uOMpQPO1G/uOMuQPO'#D}OOQO7+%_7+%_OM|QPO'#GmONRQPO'#GlOOQO7+([7+([OOQO1G/k1G/kOOQO7+%[7+%[ONZQPO'#DeOOQO7+(g7+(gO1xQPO7+(lON`QPO7+(rONgQPO7+(rP&tQPO'#H^ONoQPO,5:zONtQWO,5:{OOQO'#Ed'#EdO?}QWO'#H`ON{QQO,5:xOOQO,5;h,5;hP&|QPO'#HcOOQO7+&g7+&gO! YQPO'#EtP'uQPO'#HaO! _QPO<<IwO!ZQQO,5>OOOQO-E;b-E;bOOQO<<Jk<<JkP-bQQO'#HbO! fQPO1G2^OOQOAN@{AN@{O! kQPO,59^OOQO7+$Z7+$ZO! sQPO,59cOOQO,59c,59cO!!UQPO7+$ZO!!gQPO7+$ZP1lQPO'#HXO!!oQPO<<GpO!!vQPO<<GpO!#OQQO,5:]O!#VQPO,5:[O!#_QPO,5:[O!#gQQO7+%aO!#qQPO7+%aO!#vQPO'#GbOOQO,5:i,5:iO3RQPO,5=XO!$TQQO,5=WO!$]QPO,5=WOOQO<<LW<<LWO!$eQPO<<L^OOQO1G0f1G0fO!$lQPO'#EcOOQO1G0g1G0gO!$tQPO1G0gOOQO,5=z,5=zOOQO-E;^-E;^O!$yQPO1G3jOOQO7+'x7+'xOOQO1G.x1G.xOOQO1G.}1G.}OOQO,5=r,5=rOOQO<<Gu<<GuO!%OQPO<<GuOOQO-E;U-E;UO!%aQPOAN=[OOQO'#Dv'#DvO!%hQPO'#DtOOQO'#Dt'#DtOOQO1G/w1G/wOOQO,5=t,5=tO!%yQPO1G/vOOQO-E;W-E;WO!#OQQO'#DyO!&RQPO'#D|OOQO'#Dx'#DxOOQO<<H{<<H{O!#gQQO<<H{O#VQPO'#GdOOQO'#Gf'#GfO#VQPO'#GeO!&ZQPO'#GiOOQO,5<|,5<|O!&cQPO'#GnOOQO'#Gn'#GnOOQO1G2s1G2sOOQO,5>V,5>VO!&nQQO1G2rOOQO-E;i-E;iO!&vQWO,5:}O!&}QPO,5:}OOQO7+&R7+&ROOQO7+)U7+)UOOQOAN=aAN=aPGnQPO'#HWO!'VQPO,5:aPHtQPO'#HYO!'[QPO,5:eO!'dQQO,5:hO!'nQPO,5:hOOQOAN>gAN>gO!'vQPO,5=OOOQO,5=P,5=PO!'{QPO,5=TO!(SQPO,5=TOOQO,5=Z,5=ZP2^QQO'#HkOOQO,5=y,5=yO!([QWO1G0iOOQO-E;]-E;]OOQO1G/{1G/{O!(cQQO1G0PO!(mQPO1G0POOQO1G0P1G0POOQO,5=u,5=uO!(uQQO1G0SOOQO-E;X-E;XOOQO1G2j1G2jOOQO,5>U,5>UO!)PQPO1G2oOOQO-E;h-E;hP?}QWO'#H_OOQO7+%k7+%kO!)WQQO7+%kP!#OQQO'#HZP9wQPO'#HjOOQO<<IV<<IV",
  stateData: "!*X~O&eOS&fOS~OTaO!tPO$^QO$`RO$bSO$dTO$iUO$lVO$pWO$rXO$tYO$vZO$x[O%ebO%qcO~OXlOYiO!fjO!nnO!yhO$XoO$ZpO~O!fuO~OezO!f{O$O|O$Q!OO~O!f!RO~O!f!TO~O$[!VO~Og!WO~Og!XO~O!f!ZO~O!tPO$^QO$`RO$bSO$dTO$iUO$lVO$pWO$rXO$tYO$vZO$x[O~O%w%vX&c%vX~P#uOX!_OY!^O!b!`O%_!aO~OX!sO^!lO_!lO`!lOa!lOb!lOc!lOd!lOj!lOq!lOr!lOt!lOx!fOz!gO!W!hO!]!iO!_!jO!`!oO%_!qO~OX!xOY!wO!b!`O~O%w!}O~O!f#PO~OZ#[O#o#TO#{#UO$O#VO$Q#WO~Ox#`Xz#`X!W#`X!]#`X!_#`X#f#`X$[#`X~P&yOx#]Oz#^O!W#`O!]#bO!_#aO#f#_O~O$[#_X~P'uOYiO!fiO~O!n#hO~O!n#iO~O$[#jO~O!t!uX$^!uX$`!uX$b!uX$d!uX$i!uX$l!uX$p!uX$r!uX$t!uX$v!uX$x!uX%w!uX&c!uX!o!uX%V!uX~P!ZO$[#lO~O!fuO!t$]a$^$]a$`$]a$b$]a$d$]a$i$]a$l$]a$p$]a$r$]a$t$]a$v$]a$x$]a%w$]a&c$]a%V$]a~O!fuO!t$_a$^$_a$`$_a$b$_a$d$_a$i$_a$l$_a$p$_a$r$_a$t$_a$v$_a$x$_a%w$_a&c$_a%V$_a~O!fuO!t$aa$^$aa$`$aa$b$aa$d$aa$i$aa$l$aa$p$aa$r$aa$t$aa$v$aa$x$aa%w$aa&c$aa%V$aa~OYiO!f#nO~O$f#rO$[$eX~O!f#sO~O$f#rO~OezO~O$[#tO~OezO!f{O$O|O$Q!OO!t$ca$^$ca$`$ca$b$ca$d$ca$i$ca$l$ca$p$ca$r$ca$t$ca$v$ca$x$ca%w$ca&c$ca%V$ca~OZ#vO$[$jX!o$jX~O$[#xO~O$n#yOZ$mX$[$mX~OZ#zO$[#|O~O$[#}O~O$[$OO~O$[$PO~O#O$QO~OZ$RO$[$TO%T$UO~O^$VO_$VO`$VOa$VOb$VOc$VOd$WOj$XOq$YOr$ZOt$[Ox!fOz!gO!W!hO!]!iO!_!jO~OZ$aO$[WX~P0yOY$bO~OY$cO~O$[$gO~OX!_OY!^O!b!`O%_!aO%wUX&cUX~OY$iO~O|$jO}$jO!O$jO!P$jO!Q$jO!R$jO!S$jO!T$jO!U$jO~OY$lO~OY$nO~OY$oO~O%k$qO~O%k$rO~OY$sO~OY$uO~O$[$vO~O%w%fX&c%fX~P%VO$[%tX~P0yOY$yO~O$[$zO~OX!xOY!wO!b!`O%w%rX&c%rX~O$[$|O~O!}%OOZ!|X#O!|X#P!|X~OZ%PO#O!{X#P!{X~O#O%RO#P%RO~O#|%TO~OYiO!f%UO~OZ%XO$[#lX~OY%^O~O^$VO_$VO`$VOa$VOb$VOc$VOd$WOj$XOq$YOr$ZOt$[O~OZ#aX$[#aX~P6zOZ%eO$[#_a~O$[#_a~P'uO!o%hO~OZ$SXi$SX!Y#`X!g#`X~O!Y%kO!g%lO~OZ%mOi%oO~O!f%pO~O$f%qO~O!f%rO$[$ja!o$ja~OZ%sO$[$ja!o$ja~OZ#zO$[%wO~O${%xO$|%yO$}%yO%O%yO%P%yO%Q%yO%R%yO%S%yO~OZ$RO$[%}O%T&OO~Oe&QO~Oe&RO~Oe&SO~Oe&TO~Oe&UO~OZ[X$[[X~P6zOZuX$[uX~P6zOZ&XO$[Wa~O$[Wa~P0yOZ&[O$[Wa~P0yOe&]O~O!g&^O~O!g&_O~O!Y&`O%k!VaZ!Va^!Va_!Va`!Vaa!Vab!Vac!Vad!Vaj!Vaq!Var!Vat!Va$[!Va~O%k!^aZ!^a^!^a_!^a`!^aa!^ab!^ac!^ad!^aj!^aq!^ar!^at!^a$[!^a~O!Y&`O!`&aO~P=hO!`&bO~P=hOY&cO~OY&dO~O%k&eO~OZ&fO$[%ta~O$[%ta~P0yO!f#PO#O!{a#P!{a~OZ&kO#O!{a#P!{a~OY$cOe&nOg&mOn&mOo&mOp&mO!f&qO~O#r&tO#s&tO#t&tO#u&tO#v&tO#w&tO#x&tO#y&tOZ#na$[#na~P?}OZ#}ag#`Xn#`Xo#`Xp#`X!f#`X$[#}a~Og&mOn&mOo&mOp&mO!f&wO~O#o#TO#{#UO$O#VO$Q#WO$[#la~OZ&yO$[#la~O!Y%kOZ#ga^#ga_#ga`#gaa#gab#gac#gad#gaj#gaq#gar#gat#ga$[#ga~OZ#ia^#ia_#ia`#iaa#iab#iac#iad#iaj#iaq#iar#iat#ia$[#ia~O!Y%kO!`&{O~PCkO!`&|O~PCkO$[#_i~P'uOZ'OO$[#_i~O$U'RO$[$Vi~O!o'TO~O!o'UO~O!Z'VO~O!f'WO~OYiOi'YO!f#nO~OZ'ZOi'YO~O!f']O~O!f%rO$[$ji!o$ji~Oe'_OZ$zX$[$zX%T$zX~Oe'_O~O$['aO~Og'bO~Og&mOh'fOn&mOo&mOp&mO~Oo'cO~Og&mOn&mOo&mOp&mO~Ox!fOz!gO!W!hO!]!iO!_!jO$[Wi~OZ'iO$[Wi~O$[Wi~P0yOi'oO!f'mO~O!Z'vO~OY'wO~OY'xO~O$[%li~P1lOY'zO~O$[%ti~P1lOZ'{O$[%ti~O!f#PO#O!{i#P!{i~Oe(PO~O#X(QO#Y(QO#Z(QO#[(QO#](QO#^(QO~O$[#QXZ#QXi#QX~PJVO#o#TO#{#UO$O#VO$Q#WO$[#li~O$[#_q~P'uOZ(YO$[#_q~O!n(ZO~O$U'RO$[$Tq~OYiOi(]O!f#nO~O!f%rO~O!f(_O~O$[(`O~Oh(aOifX~Oi(bO~Oh(cO~OZ(eOi(bO~O$[Wq~P1lOZ(hO$[Wq~O!g(jO~OZ(kOi!dX~O!k(mO~Oi(nO~O%V(oO~P#uOz(qO~OZ(rO$[%`X~O!Y&`O~O$[%tq~P1lOZ(uO$[%tq~Oi(vO~Oi(xO~P?}O$[#QaZ#Qai#Qa~PJVO!Y%kO~O$[#_y~P'uOi(}O~Og)OOifa~Og&mOn&mOo&mOp&mOika~Og&mOi)ROn&mOo&mOp&mO~OZ)SOi)RO~O$[Wy~P1lOZ)UO$[Wy~OY)VO~P3RO!f'mOi!da~OZ)[Oi!da~OY)VO!n)^O~P3RO!k)bO~O!n)cO%Z)dO%[)dO~P9wOY$cO$[%`a~OZ)lO$[%`a~O$[%ty~P1lOZ)nOi#VX~Oi)pO~O!o)qO~Og&mOi)rOn&mOo&mOp&mO~O$[W!R~P1lO!Y)tOZ!hXi!hX!g!hX!o!hX~O!f'mOi!di~OZ)wO!g!pX~OZ)|O$[%]X~O!}*OOZ%bX$[%bX~OY$cO$[%`i~Oi#Va~P?}OZ*ROi#Va~O!Z*TO~OZ*UO!o*WO~OY)VO!g!pa~P3ROZ*YO!g!pa~O!o*[O~O$[%]a~P9wOZ*^O$[%]a~Oi#Vi~P?}OY)VO!o*aO~P3ROZ*bO!o*aO~OY)VO!g!pi~P3RO$[%]i~P9wOY)VO!o*eO~P3RO%wXpg%_!y!b%V|}!U!T!O!P!R!Q!Sn#x#y$X$Z$d$p!t$^$`$b$i$l$r$t$v$x#xY~",
  goto: ":U&cPP&d&j&nP&r&u&yPPP&}'ePPPPPPPP'pPPPP's'v(PPPPPP(lP)Z)u*^P*^P*qPPPPPPPPP*^P+VPP*^P+`PP+vP,O,R,UPP,^,o,zP-V-]PP-]-a-d-kP-r.R.Z.cP.k.n.qPPP.y/_/l/l/w0S0VPPPPPP.c0Z1U1b1j1j1jP1j1r1j1j2R2c2j2tP2|3PPPPPPPPP2tPP2tP2tP3S3^.ZP.Z.ZP.ZPP-kP-kP-kP-kP3fP-k3jP3q3jP4TP3jP3jP3jP3jP3jP4Z4aPPPPPPPPP4lP4o4o4rPP4o&yP4u4x5Q5T&nP5W5Z5_5c5gP5c5c5c5_&nP5k5n+z&j5rP5v5|6Z6a6w6}7X7d7n7t7z8Q8[8b8h8n8|9S9Y9`9f9l9r9x:OQgOR&i$|TfO$|TdO$|R!eaT!ca!dT!ba!dQ$`!^Q$x!wQ%d#dQ&W$_S&Z$a$bQ&h$yR'l&[c$]!^!w#d$^$_$a$b$y&[R'c&QR'c&RQ'e&RQ(d'fR)P(cb&q%R%S&n&u(P(R)n*R*`Q&w%VU'd&R'f(cQ'g&UV)Q(e)S)sQ$d!`Q$f!aQ$t!qb&o%R%S&n&u(P(R)n*R*`Q'c&TX's&_(r)l*PQ$`!^Q$x!wS&Z$a$bQ&h$y`'h&X&f'i'{(g(h(u)UR'l&[S!nb!ul$_!^!w$a$b$y&X&[&f'i'{(g(h(u)UR'y&cs!kb!^!u!w$a$b$y&X&[&c&f'i'{(g(h(u)UQ$k!gQ%]#^b)V(j(m)^)b)w*U*Y*b*cR)h(qQ$m!hQ$p!jR'w&br!kb!^!u!w$a$b$y&X&[&c&f'i'{(g(h(u)UR(t'zS!ba!dT!yc!{R$e!`R'p&]Q'n&]V)Z(k)[)uQ)Y(jS)_(m)bQ)v)^Z*X)w*U*Y*b*cc)X(j(m)^)b)w*U*Y*b*cc)W(j(m)^)b)w*U*Y*b*cQ)a(mR)y)bT)`(m)bR'r&^Z_O`$|&^'qZ^O`$|&^'qQtPQ#gnQ%i#hQ%j#iR(|(Z]rPns#h#i(Z]qPns#h#i(Z]mPns#h#i(ZR#ShR#RhQ#QhV&j%P&k'}Q&s%RQ&v%SQ(O&nQ(T&uQ(w(PV*Q)n*R*``&r%R%S&n&u(P)n*R*`R(z(Rc&q%R%S&n&u(P(R)n*R*`c&p%R%S&n&u(P(R)n*R*`R(y(PT(R&r(S[kPns#h#i(ZQ#flW#oz%m'Z(^Q%S#TQ%V#VQ%[#]Q%_#`Q%a#aQ%c#bQ(V&{R(W&|Q#ekQ%g#fX&}%e'O(X(Y]#dk#f%e'O(X(Y]#ck#f%e'O(X(YW#pz%m'Z(^Q%`#`Q%b#aR(V&|[mPns#h#i(Z]vQRSwxyS#ZjuR%Z#[U#Yju#[V&x%X&y(U]#Xju#[%X&y(UR&v%SR&u%SS}T!QQ#s!OR%W#WQ#qzV'X%m'Z(^T!PT!QZ]O`$|&^'qQ!SUQ!YZQ&P$UQ'`&OQ)z)cR){)eQ!UVR%u#zQ![[R%{$RQ%z$QQ)f(oV*])|*^*dR(p'qR)g(oR)e(oR'u&_Q't&_V)k(r)l*PR)j(qR)i(qR!vbT!tb!uT!rb!uT!pb!uT!mb!uR!|cT!zc!{TeO$|Q!daR$h!d`$^!^!w#d$_$a$b$y&[R&V$^Q(f'gR)T(fQ&Y$`Q&g$xY'j&Y&g'k'|(iQ'k&ZQ'|&hR(i'lQ(l'nR)](lQ)x)_Q*V)vT*Z)x*VS`O$|S!]`'qR'q&^YsPn#h#i(ZR#ksQ%Q#QR&l%QQ)o(wR*S)oQ(S&rR({(SQ%f#eS'P%f'QR'Q%gQ%n#qR'[%nQ%Y#YR&z%YQ'S%hR(['SQwQQxRQySV#mwxyQ!QTR#u!QQ#w!RR%t#wQ#{!UR%v#{Q$S![R%|$SQ)})fR*_)}Q(s'tR)m(sQ!ubR$w!uQ!{cR${!{Q#OgR$}#O",
  nodeNames: "⚠ Query QueryEither QuerySchema QueryDefine DEFINE Definables Definable DefinitionType KIND LABEL COMMA Annotations Annotation ANNOTATION_ABSTRACT ANNOTATION_CASCADE ANNOTATION_DISTINCT ANNOTATION_INDEPENDENT ANNOTATION_KEY ANNOTATION_UNIQUE ANNOTATION_CARD PARENOPEN Cardinality INTEGERLITERAL DOUBLE_DOT PARENCLOSE ANNOTATION_RANGE Range RangeBound ValueLiteral BOOLEANLITERAL STRINGLITERAL DOUBLELITERAL ANNOTATION_REGEX ANNOTATION_SUBKEY IDENTIFIER ANNOTATION_VALUES TypeCapability TypeCapabilityBase SubDeclaration SUB ValueTypeDeclaration VALUEKEYWORD ValueType BOOLEAN INTEGER DOUBLE DECIMAL DATETIMETZ DATETIME DATE DURATION STRING OwnsDeclaration OWNS LabelList SQBRACKETOPEN SQBRACKETCLOSE PlaysDeclaration PLAYS RelatesDeclaration RELATES AS DefinitionFunction FUN FunctionSignature FunctionArguments FunctionArgument VAR COLON NamedTypeAny NamedTypeList NamedType ARROW FunctionOutput FunctionOutputStream CURLYOPEN CURLYCLOSE FunctionOutputSingle FunctionBlock QueryStage ClauseMatch MATCH Patterns Pattern Statement StatementAssignment LET AssignmentLeft VarsAssignment VarAssignment QUESTIONMARK ASSIGN IN Expression ExpressionValue ExpressionParenthesis FunctionCall FunctionName FunctionCallArguments ExpressionOperator POWER TIMES DIVIDE MODULO PLUS MINUS StatementType TypeRef TypeConstraint TypeConstraintBase SubConstraint ValueTypeConstraint LabelConstraint LABELKEYWORD OwnsConstraint TypeRefList RelatesConstraint PlaysConstraint StatementThing ThingConstraintList ThingConstraint IsaConstraint ISA Comparison ComparisonOperator EQUAL NOT_EQUAL GREATER GREATER_EQUAL LESS LESS_EQUAL LIKE CONTAINS IidConstraint IID IID_VALUE HasConstraint HAS LinksConstraint LINKS Relation RolePlayer PatternDisjunction OR PatternConjunction PatternNegation NOT PatternTry TRY SEMICOLON ClauseInsert INSERT ClausePut PUT ClauseUpdate UPDATE ClauseDelete DELETE StatementDeletable OF OperatorStream OperatorSelect SELECT Vars OperatorSort SORT VAROrder ORDER OperatorDistinct DISTINCT OperatorOffset OFFSET OperatorLimit LIMIT OperatorRequire REQUIRE OperatorReduce REDUCE ReduceAssign Reducer COUNT MAX MIN MEAN MEDIAN STD SUM LIST GROUPBY ReturnStatement RETURN ReturnStream ReturnSingle ReturnSingleSelector FIRST LAST ReturnReduce DefinitionStruct STRUCT DefinitionStructFields DefinitionStructField StructFieldValueType ValueTypeOptional QueryUndefine UNDEFINE Undefinables Undefinable UndefineFrom UndefineAnnotationFromCapability AnnotationCategory FROM UndefineAnnotationFromType UndefineCapability UndefineSpecialise UndefineStruct QueryRedefine REDEFINE Redefinables Redefinable RedefinableType QueryPipelinePreambled Pipeline END",
  maxTerm: 252,
  skippedNodes: [0],
  repeatNodeCount: 25,
  tokenData: "$C{~R!WXY$kYZ$k]^$kpq$kqr$|rs%Xst&utu'^uv(Uxy(Zyz(`z{(e{|(j|}(o}!O(t!O!P)q!P!Q)|!Q!R*R!R![)P![!]*}!]!^+S!^!_+X!_!`+f!`!a+s!a!b,Q!b!c,V!c!}5^!}#O7P#P#Q7U#Q#R7Z#T#U7`#U#V>T#V#WB[#W#XH}#X#Y!7Z#Y#Z!:|#Z#[!Cn#[#]!Gx#]#^!Ig#^#`5^#`#a#$u#a#b#1`#b#c#:k#c#d#<]#d#e#Bh#e#f5^#f#g#Fq#g#h$)t#h#i$7P#i#j$8w#j#k$@v#k#o5^#o#p$Cq#q#r$Cv~$pS&e~XY$kYZ$k]^$kpq$k~%PP!_!`%S~%XO#s~~%[VOr%Xrs%qs#O%X#O#P%v#P;'S%X;'S;=`&o<%lO%X~%vOo~~%yRO;'S%X;'S;=`&S;=`O%X~&VWOr%Xrs%qs#O%X#O#P%v#P;'S%X;'S;=`&o;=`<%l%X<%lO%X~&rP;=`<%l%X~&zS&f~OY&uZ;'S&u;'S;=`'W<%lO&u~'ZP;=`<%l&u~'aT}!O'p!Q!['p!c!}'p#R#S'p#T#o'p~'uT!f~}!O'p!Q!['p!c!}'p#R#S'p#T#o'p~(ZO#[~~(`Oe~~(eOi~~(jO#Y~~(oO#]~~(tOZ~Z(yQ#^Q!Q![)P!`!a)lX)WQpXgX!O!P)^!Q![)PX)aP!Q![)dX)iPpX!Q![)dP)qO!kP~)tP!O!P)w~)|Oh~~*RO#Z~Z*YRpXgX!O!P)^!Q![)P#l#m*cQ*fR!Q![*o!c!i*o#T#Z*oQ*tR#|Q!Q![*o!c!i*o#T#Z*o~+SO!g~~+XO$[~~+^P#v~!_!`+a~+fO#w~]+kP#OT!_!`+nW+sO#rW~+xP#t~!_!`+{~,QO#u~~,VO!}~~,YX#T#U,u#V#W-v#W#X/P#]#^0Q#_#`1e#f#g1v#g#h3P#i#j3t#j#k4i~,xP#U#V,{~-OP#g#h-R~-UP#h#i-X~-[P#f#g-_~-bP#T#U-e~-hP#V#W-k~-nP#h#i-q~-vO^~~-yP#T#U-|~.PQ#f#g.V#g#h.b~.YP#W#X.]~.bOd~~.eP#V#W.h~.kP#T#U.n~.qP#W#X.t~.wP#X#Y.z~/PO_~~/SP#]#^/V~/YP#g#h/]~/`P#h#i/c~/fP#]#^/i~/lP#b#c/o~/rP#V#W/u~/xP#h#i/{~0QO`~~0TP#b#c0W~0ZP#W#X0^~0aP#X#Y0d~0gP#d#e0j~0mP#X#Y0p~0sP#b#c0v~0yP#W#X0|~1PP#X#Y1S~1VP#b#c1Y~1]P#h#i1`~1eOa~~1hP#X#Y1k~1nP#m#n1q~1vOb~~1yQ#T#U2P#X#Y2h~2SP#b#c2V~2YP#Z#[2]~2`P#X#Y2c~2hOj~~2kP#Z#[2n~2qP#X#Y2t~2wP#l#m2z~3POq~~3SP#i#j3V~3YP#U#V3]~3`P#_#`3c~3fP#X#Y3i~3lP#m#n3o~3tOr~~3wP#b#c3z~3}P#]#^4Q~4TP#e#f4W~4ZP#i#j4^~4aP#X#Y4d~4iOc~~4lP#T#U4o~4rP#`#a4u~4xP#i#j4{~5OP#X#Y5R~5UP#g#h5X~5^Ot~Y5aT}!O5p!Q![5p!c!}5p#R#S5p#T#o5pY5uUYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#o5pY6[T}!O6k!Q![6k!c!}6k#R#S6k#T#o6kY6pTYY}!O6k!Q![6k!c!}6k#R#S6k#T#o6k~7UO!Y~~7ZO!Z~~7`O#X~~7cW}!O5p!Q![5p!c!}5p#R#S5p#T#g5p#g#h7{#h#i9V#i#o5p_8SW!`PYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#V5p#V#W8l#W#o5p^8sU$nSYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#o5p~9[WYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#h5p#h#i9t#i#o5p~9yWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#f5p#f#g:c#g#o5p~:hWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#]5p#]#^;Q#^#o5p~;VWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#U5p#U#V;o#V#o5p~;tWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#i5p#i#j<^#j#o5p~<cWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#h5p#h#i<{#i#o5p~=QWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#X5p#X#Y=j#Y#o5p~=qUX~YY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#o5p~>WV}!O5p!Q![5p!c!}5p#R#S5p#T#c5p#c#d>m#d#o5p~>rWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#c5p#c#d?[#d#o5p~?aWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#`5p#`#a?y#a#o5p~@OWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#X5p#X#Y@h#Y#o5p~@mVYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#UAS#U#o5p~AXWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#b5p#b#cAq#c#o5p~AxU|~YY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#o5p~B_V}!O5p!Q![5p!c!}5p#R#S5p#T#c5p#c#dBt#d#o5p~ByYYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#b5p#b#cCi#c#i5p#i#jGW#j#o5p~CnWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#h5p#h#iDW#i#o5p~D]VYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#UDr#U#o5p~DwWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#]5p#]#^Ea#^#o5p~EfWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#b5p#b#cFO#c#o5p~FTWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#g5p#g#hFm#h#o5p~FtU#y~YY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#o5pZG]WYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#b5p#b#cGu#c#o5pZGzWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#h5p#h#iHd#i#o5pZHkU${PYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#o5p~IQ^}!O5p!Q![5p!c!}5p#R#S5p#T#UI|#U#X5p#X#Y!!R#Y#]5p#]#^!+k#^#c5p#c#d!/z#d#i5p#i#j!2}#j#o5p~JRWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#h5p#h#iJk#i#o5p~JpWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#X5p#X#YKY#Y#o5p~KaW!S~YY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#h5p#h#iKy#i#o5p~LOWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#]5p#]#^Lh#^#o5p~LmWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#a5p#a#bMV#b#o5p~M[WYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#X5p#X#YMt#Y#o5p~M{U!R~YY}!ON_!Q![5p![!]6X!c!}5p#R#S5p#T#o5p~NdWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#h5p#h#iN|#i#o5p~! RVYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#n5p#n#o! h~! oU!Q~YY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#o5p~!!W^YY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#V5p#V#W!#S#W#Y5p#Y#Z!&S#Z#`5p#`#a!(h#a#g5p#g#h!*|#h#o5p~!#XWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#]5p#]#^!#q#^#o5p~!#vWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#a5p#a#b!$`#b#o5p~!$eVYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#U!$z#U#o5p~!%PWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#`5p#`#a!%i#a#o5p~!%pU!P~YY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#o5pZ!&XWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#]5p#]#^!&q#^#o5pZ!&vWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#b5p#b#c!'`#c#o5pZ!'eWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#X5p#X#Y!'}#Y#o5pZ!(UUTPYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#o5p~!(mWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#X5p#X#Y!)V#Y#o5p~!)[WYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#h5p#h#i!)t#i#o5p~!)yWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#X5p#X#Y!*c#Y#o5p~!*jU$d~YY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#o5p^!+RWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#V5p#V#W8l#W#o5p~!+pWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#g5p#g#h!,Y#h#o5p~!,_WYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#h5p#h#i!,w#i#o5p~!,|WYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#]5p#]#^!-f#^#o5p~!-kWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#b5p#b#c!.T#c#o5p~!.YWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#V5p#V#W!.r#W#o5p~!.wWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#h5p#h#i!/a#i#o5p~!/hU$p~YY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#o5p~!0PWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#i5p#i#j!0i#j#o5p~!0nWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#U5p#U#V!1W#V#o5p~!1]WYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#`5p#`#a!1u#a#o5p~!1zWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#X5p#X#Y!2d#Y#o5p~!2kU!O~YY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#o5p~!3SWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#f5p#f#g!3l#g#o5p~!3qVYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#U!4W#U#o5p~!4]WYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#h5p#h#i!4u#i#o5p~!4zWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#]5p#]#^!5d#^#o5p~!5iWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#c5p#c#d!6R#d#o5p~!6WWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#b5p#b#c!6p#c#o5p~!6wU!T~YY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#o5p~!7^V}!O5p!Q![5p!c!}5p#R#S5p#T#b5p#b#c!7s#c#o5p~!7xYYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#W5p#W#X!8h#X#h5p#h#i!9R#i#o5p~!8oU%w~YY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#o5p~!9WWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#]5p#]#^!9p#^#o5p~!9uWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#h5p#h#i!:_#i#o5p~!:dWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#m5p#m#n=j#n#o5p~!;P[}!O5p!Q![5p!c!}5p#R#S5p#T#U!;u#U#]5p#]#^!>Z#^#f5p#f#g!@o#g#i5p#i#j!Bf#j#o5p~!;zWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#`5p#`#a!<d#a#o5p~!<iWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#g5p#g#h!=R#h#o5p~!=WWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#X5p#X#Y!=p#Y#o5p~!=wUn~YY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#o5pZ!>`WYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#f5p#f#g!>x#g#o5pZ!>}WYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#g5p#g#h!?g#h#o5pZ!?lWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#h5p#h#i!@U#i#o5pZ!@]U%ZPYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#o5pZ!@tWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#c5p#c#d!A^#d#o5pZ!AcWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#a5p#a#b!A{#b#o5pZ!BSU%kPYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#o5p~!BkWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#b5p#b#c!CT#c#o5p~!C[U!b~YY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#o5pZ!CqV}!O5p!Q![5p!c!}5p#R#S5p#T#f5p#f#g!DW#g#o5pZ!D]WYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#c5p#c#d!Du#d#o5pZ!DzWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#i5p#i#j!Ed#j#o5pZ!EiWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#d5p#d#e!FR#e#o5pZ!FWWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#U5p#U#V!Fp#V#o5pZ!FuWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#m5p#m#n!G_#n#o5pZ!GfU%TPYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#o5pZ!G{U}!O5p!Q![5p!c!}5p#R#S5p#T#U!H_#U#o5pZ!HdWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#g5p#g#h!H|#h#o5pZ!ITU$OPYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#o5p_!IjZ}!O5p!Q![5p!c!}5p#R#S5p#T#]5p#]#^!J]#^#b5p#b#c!Ke#c#g5p#g#h##p#h#o5pZ!JbWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#W5p#W#X!Jz#X#o5pZ!KRU#{PYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#o5p_!KlX#PSYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#g5p#g#h!LX#h#i!Nm#i#o5pZ!L^WYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#X5p#X#Y!Lv#Y#o5pZ!L{WYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#f5p#f#g!Me#g#o5pZ!MjWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#h5p#h#i!NS#i#o5pZ!NZU$^RYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#o5pZ!NrWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#X5p#X#Y# [#Y#o5pZ# aWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#Z5p#Z#[# y#[#o5pZ#!OWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#X5p#X#Y#!h#Y#o5pZ#!mWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#f5p#f#g##V#g#o5pZ##^U}RYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#o5pZ##uVYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#U#$[#U#o5pZ#$cU#oPYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#o5p~#$xY}!O5p!Q![5p!c!}5p#R#S5p#T#U#%h#U#X5p#X#Y#)[#Y#]5p#]#^#*d#^#o5pZ#%mYYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#U5p#U#V#&]#V#g5p#g#h#(S#h#o5pZ#&bWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#X5p#X#Y#&z#Y#o5pZ#'PWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#`5p#`#a#'i#a#o5pZ#'pU#fPYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#o5pZ#(XWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#h5p#h#i#(q#i#o5pZ#(xU%[PYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#o5p~#)aWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#h5p#h#i#)y#i#o5p~#*QU!y~YY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#o5p~#*i]YY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#_5p#_#`#+b#`#a5p#a#b#,j#b#c#.a#c#g5p#g#h#0W#h#o5p~#+gWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#X5p#X#Y#,P#Y#o5p~#,WU#x~YY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#o5p~#,oWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#]5p#]#^#-X#^#o5p~#-^WYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#h5p#h#i#-v#i#o5p~#-}U$t~YY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#o5pZ#.fWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#_5p#_#`#/O#`#o5pZ#/TWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#g5p#g#h#/m#h#o5pZ#/tU$QPYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#o5pZ#0]WYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#h5p#h#i#0u#i#o5pZ#0|U%SPYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#o5p~#1cY}!O5p!Q![5p!c!}5p#R#S5p#T#U#2R#U#X5p#X#Y#5W#Y#]5p#]#^#9c#^#o5p~#2WYYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#h5p#h#i#2v#i#l5p#l#m#4m#m#o5p~#2{WYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#V5p#V#W#3e#W#o5p~#3jWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#[5p#[#]#4S#]#o5p~#4ZU!t~YY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#o5pZ#4tU$|PYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#o5pZ#5]XYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#U#5x#U#W5p#W#X#7Q#X#o5pZ#5}WYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#b5p#b#c#6g#c#o5pZ#6nU%OPYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#o5pZ#7VWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#]5p#]#^#7o#^#o5pZ#7tVYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#U#8Z#U#o5pZ#8`WYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#b5p#b#c#8x#c#o5pZ#9PU%PPYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#o5pZ#9hWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#b5p#b#c#:Q#c#o5pZ#:XU$}PYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#o5p~#:nV}!O5p!Q![5p!c!}5p#R#S5p#T#c5p#c#d#;T#d#o5p~#;YWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#h5p#h#i#;r#i#o5p~#;yU$X~YY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#o5p_#<`Z}!O5p!Q![5p!c!}5p#R#S5p#T#Y5p#Y#Z#=R#Z#f5p#f#g#@W#g#k5p#k#l#@q#l#o5p_#=YW$fSYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#Y5p#Y#Z#=r#Z#o5pZ#=wWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#g5p#g#h#>a#h#o5pZ#>fWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#X5p#X#Y#?O#Y#o5pZ#?TWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#h5p#h#i#?m#i#o5pZ#?tU$rRYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#o5pZ#@_U$UPYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#o5pZ#@vWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#b5p#b#c#A`#c#o5pZ#AeWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#g5p#g#h#A}#h#o5pZ#BUU!WPYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#o5p~#BkX}!O5p!Q![5p!c!}5p#R#S5p#T#`5p#`#a#CW#a#i5p#i#j#Ei#j#o5pZ#C]VYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#U#Cr#U#o5pZ#CwWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#m5p#m#n#Da#n#o5pZ#DfWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#g5p#g#h#EO#h#o5pZ#EVU!]PYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#o5p~#EnWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#h5p#h#i#FW#i#o5p~#F_U$`~YY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#o5p~#FtV}!O5p!Q![5p!c!}5p#R#S5p#T#X5p#X#Y#GZ#Y#o5p~#G`^YY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#W5p#W#X#H[#X#`5p#`#a#My#a#e5p#e#f$$]#f#h5p#h#i$'`#i#o5p~#HaYYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#X5p#X#Y#IP#Y#i5p#i#j#LS#j#o5pZ#IUWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#Y5p#Y#Z#In#Z#o5pZ#IsWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#]5p#]#^#J]#^#o5pZ#JbWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#b5p#b#c#Jz#c#o5pZ#KPWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#X5p#X#Y#Ki#Y#o5pZ#KpU%qPYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#o5p~#LXWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#V5p#V#W#Lq#W#o5p~#LvWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#X5p#X#Y#M`#Y#o5p~#MgU$x~YY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#o5p~#NOVYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#U#Ne#U#o5p~#NjWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#h5p#h#i$ S#i#o5p~$ XYYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#X5p#X#Y$ w#Y#]5p#]#^$#P#^#o5pZ$ |WYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#g5p#g#h$!f#h#o5pZ$!mU!_PYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#o5p~$#UWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#c5p#c#d$#n#d#o5p~$#sWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#b5p#b#c=j#c#o5p~$$bWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#i5p#i#j$$z#j#o5p~$%PWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#]5p#]#^$%i#^#o5p~$%nWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#f5p#f#g$&W#g#o5p~$&]WYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#X5p#X#Y$&u#Y#o5p~$&|U$v~YY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#o5p~$'eWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#i5p#i#j$'}#j#o5p~$(SWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#f5p#f#g$(l#g#o5p~$(qWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#b5p#b#c$)Z#c#o5p~$)bU%V~YY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#o5p~$)w[}!O5p!Q![5p!c!}5p#R#S5p#T#X5p#X#Y$*m#Y#c5p#c#d$-p#d#h5p#h#i$/g#i#j$5W#j#o5p~$*rWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#`5p#`#a$+[#a#o5p~$+aWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#X5p#X#Y$+y#Y#o5p~$,OWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#V5p#V#W$,h#W#o5p~$,mWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#h5p#h#i$-V#i#o5p~$-^U$i~YY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#o5p~$-uWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#f5p#f#g$._#g#o5p~$.dWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#h5p#h#i$.|#i#o5p~$/TU$l~YY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#o5p~$/lYYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#W5p#W#X$0[#X#f5p#f#g$0u#g#o5pZ$0cU%QPYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#o5p~$0zYYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#]5p#]#^$1j#^#i5p#i#j$3a#j#o5p~$1oWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#b5p#b#c$2X#c#o5p~$2^WYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#Z5p#Z#[$2v#[#o5p~$2}U!U~YY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#o5p~$3fWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#V5p#V#W$4O#W#o5p~$4TWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#h5p#h#i$4m#i#o5p~$4tU%_~YY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#o5pZ$5]YYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#U5p#U#V$5{#V#a5p#a#b$6f#b#o5pZ$6SUxPYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#o5pZ$6mU%RPYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#o5p~$7SV}!O5p!Q![5p!c!}5p#R#S5p#T#f5p#f#g$7i#g#o5p~$7nYYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#i5p#i#j!=R#j#m5p#m#n$8^#n#o5p~$8eU$Z~YY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#o5p~$8zX}!O5p!Q![5p!c!}5p#R#S5p#T#b5p#b#c$9g#c#d5p#d#e$=v#e#o5pZ$9lWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#W5p#W#X$:U#X#o5pZ$:ZWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#X5p#X#Y$:s#Y#o5pZ$:xWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#Y5p#Y#Z$;b#Z#o5pZ$;gWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#]5p#]#^$<P#^#o5pZ$<UWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#b5p#b#c$<n#c#o5pZ$<sWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#X5p#X#Y$=]#Y#o5pZ$=dU%ePYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#o5p~$={WYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#W5p#W#X$>e#X#o5p~$>jVYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#U$?P#U#o5p~$?UWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#h5p#h#i$?n#i#o5p~$?sWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#X5p#X#Y$@]#Y#o5p~$@dU$b~YY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#o5pZ$@yU}!O5p!Q![5p!c!}5p#R#S5p#T#U$A]#U#o5pZ$AbWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#`5p#`#a$Az#a#o5pZ$BPWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#i5p#i#j$Bi#j#o5pZ$BnWYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#X5p#X#Y$CW#Y#o5pZ$C_UzPYY}!O5p!Q![5p![!]6X!c!}5p#R#S5p#T#o5p~$CvO!n~~$C{O!o~",
  tokenizers: [0, 1, 2, 3],
  topRules: {"Query":[0,1]},
  tokenPrec: 2502
});

// TODO: We could do better by climbing up the tree using `atNode.parentNode` to predict based on position as well.
// We could also refine the suggestions by creating datastructures based on the declarations in the schema, rather than blindly suggesting every label.
function suggestLabel(label) {
    return {
        label: label,
        type: "label",
        apply: label,
        info: "label suggestion",
    };
}
function suggestVariable(varName) {
    return {
        label: varName,
        type: "variable",
        apply: varName,
        info: "variable suggestion",
    };
}
function collectLabelSuggestions(context, tree, atNode) {
    // This is a placeholder function. You will need to implement the logic to collect label suggestions.
    // For now, we return an empty array.
    var options = [];
    tree.iterate({
        enter: (other) => {
            if (other.name == "LABEL") {
                let content = context.state.sliceDoc(other.from, other.to);
                options.push(suggestLabel(content));
            }
        }
    });
    return options;
}
function collectVariableSuggestions(context, tree, atNode) {
    var options = [];
    tree.iterate({
        enter: (other) => {
            if (other.name == "VAR") {
                let content = context.state.sliceDoc(other.from, other.to);
                options.push(suggestVariable(content));
            }
        }
    });
    return options;
}
// See: https://codemirror.net/examples/autocompletion/ and maybe the SQL / HTML Example there.
function autocompleteTypeQL(context) {
    let tree = syntaxTree(context.state);
    let currentNode = tree.resolveInner(context.pos, -1); // https://lezer.codemirror.net/docs/ref/#common.SyntaxNode
    // We may have to walk the tree to find the most appropriate node to suggest things based on.
    let options = null;
    if (currentNode.name == "LABEL") {
        options = collectLabelSuggestions(context, tree);
    }
    else if (currentNode.name == "VAR") {
        options = collectVariableSuggestions(context, tree);
    }
    else ;
    if (options != null) {
        // And once we figure out, we have to create a list of completion objects
        // It may be worth changing the grammar to be able to do this more easily, rather than replicate the original TypeQL grammar.
        // https://codemirror.net/docs/ref/#autocomplete.Completion
        return {
            from: currentNode.from,
            options: options,
            // Docs: "regular expression that tells the extension that, as long as the updated input (the range between the result's from property and the completion point) matches that value, it can continue to use the list of completions."
            validFor: /^(\w+)?$/
        };
    }
    else {
        return null;
    }
}

const TypeQLLanguage = LRLanguage.define({
    parser: parser.configure({
        props: [
            indentNodeProp.add({}),
            foldNodeProp.add({
                QueryStage: foldInside
            }),
            styleTags({
                // See: https://lezer.codemirror.net/docs/ref/#highlight.tags
                VAR: tags.variableName,
                // Literals
                STRINGLITERAL: tags.string,
                INTEGERLITERAL: tags.number,
                DOUBLELITERAL: tags.number,
                BOOLEANLITERAL: tags.bool,
                // Types
                LABEL: tags.typeName,
                BOOLEAN: tags.typeName,
                INTEGER: tags.typeName,
                DOUBLE: tags.typeName,
                DECIMAL: tags.typeName,
                DATETIMETZ: tags.typeName,
                DATETIME: tags.typeName,
                DATE: tags.typeName,
                DURATION: tags.typeName,
                STRING: tags.typeName,
                // Keywords
                ISA: tags.keyword,
                HAS: tags.keyword,
                LINKS: tags.keyword,
                OWNS: tags.keyword,
                RELATES: tags.keyword,
                PLAYS: tags.keyword,
                FUN: tags.keyword,
                LET: tags.keyword,
                FIRST: tags.keyword,
                LAST: tags.keyword,
                // Value type names?
                // Stages
                DEFINE: tags.heading1,
                UNDEFINE: tags.heading1,
                REDEFINE: tags.heading1,
                MATCH: tags.heading1,
                INSERT: tags.heading1,
                DELETE: tags.heading1,
                UPDATE: tags.heading1,
                PUT: tags.heading1,
                END: tags.heading1,
                SELECT: tags.heading1,
                REDUCE: tags.heading1,
                SORT: tags.heading1,
                OFFSET: tags.heading1,
                LIMIT: tags.heading1,
                REQUIRE: tags.heading1,
                DISTINCT: tags.heading1,
                GROUPBY: tags.heading1,
                // SubPattern
                OR: tags.controlOperator,
                NOT: tags.controlOperator,
                TRY: tags.controlOperator,
                // Misc
                Annotation: tags.meta,
                LINECOMMENT: tags.lineComment,
            })
        ]
    }),
    languageData: {
        commentTokens: { line: "#" }
    }
});
function TypeQL() {
    return new LanguageSupport(TypeQLLanguage, [
        TypeQLLanguage.data.of({
            autocomplete: autocompleteTypeQL
        }),
    ]);
}
// A Linter which flags syntax errors from: https://discuss.codemirror.net/t/showing-syntax-errors/3111/6
function otherExampleLinter() {
    return linter((view) => {
        const diagnostics = [];
        syntaxTree(view.state).iterate({
            enter: n => {
                if (n.type.isError) {
                    diagnostics.push({
                        from: n.from,
                        to: n.to,
                        severity: "error",
                        message: "Syntax error.",
                    });
                }
            },
        });
        return diagnostics;
    });
}

export { TypeQL, TypeQLLanguage, otherExampleLinter };
